{{ $cluster := .Values.jxRequirements.cluster }}
{{- range $key, $env := .Values.jxRequirements.environments }}
{{- if hasKey $env "ingress" }}
{{ $ingress := $env.ingress }}
{{ $domain := $ingress.domain }}
{{ $name := $ingress.domain | replace "." "-" }}
{{- if and ( hasKey $ingress "tls" ) ( and ( eq $ingress.tls.enabled true ) $ingress.tls.production ) }}
{{ $tls := $ingress.tls }}
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: "tls-{{ $name }}-p"
  labels:
    jenkins.io/letsencrypt-service: production
spec:
  secretName: "tls-{{ $name }}-p"
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: "letsencrypt-{{ $name }}-p"
  commonName: "*.{{ .ingress.domain }}"
  dnsNames:
  - "*.{{ $domain }}"
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: "letsencrypt-{{ $name }}-p"
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: "{{ $tls.email }}"
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: "letsencrypt-{{ $name }}-p"
    solvers:
    - selector:
        dnsZone:
        - "{{ $domain }}"
      dns01:
{{- if eq $cluster.provider "gke" }}
        clouddns:
          project: "{{ $cluster.project }}"
          serviceAccountSecretRef:
            name: external-dns-gcp-sa
            key: credentials.json
{{- end }}
{{- if eq $cluster.provider "eks" }}
        route53:
          region: "{{ $cluster.region }}"
{{- end }}
{{- end }}
{{- end }}
{{- end }}
