---
apiVersion: v1
data:
  SECURITY_OAUTH2_CLIENT_ID: {{ .Values.secrets.oauth.clientId | b64enc | quote }}
  SECURITY_OAUTH2_CLIENT_SECRET: {{ .Values.secrets.oauth.secret | b64enc | quote }}
kind: Secret
metadata:
  labels:
    app: {{ template "jenkins-servers.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: jenkins-operator-secrets-master
type: Opaque
---
apiVersion: v1
kind: Secret
data:
  username: {{ .Values.secrets.jira.username | b64enc | quote }}
  password: {{ .Values.secrets.jira.password | b64enc | quote }}
metadata:
  name: jenkins-master-jira
  labels:
    app: {{ template "jenkins-servers.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    jenkins.io/credentials-type: usernamePassword
    jenkins-cr: master
  annotations:
    jenkins.io/credentials-description : "jira credentials from Kubernetes"
type: Opaque
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-master-backup
  labels:
    app: jenkins-operator
    jenkins-cr: master
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-operator-casc-master
  labels:
    app: {{ template "jenkins-servers.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  01-google-auth.yaml: |2
    jenkins: 
      securityRealm:
        googleOAuth2:
          clientId: "${SECURITY_OAUTH2_CLIENT_ID}"
          clientSecret: "${SECURITY_OAUTH2_CLIENT_SECRET}"
          rootURLFromRequest: true
      authorizationStrategy:
        loggedInUsersCanDoAnything:
          allowAnonymousRead: false
  02-jobs.yaml: |2
    jobs:
      - script: >
          folder('nxmatic')
      - script: >
          multibranchPipelineJob('nxmatic/jxlabs-nos-app') {
            description('NOS web components')
            branchSources {
              github {
                id('80eb30c3-b6e9-4f00-975e-0e52c64f458e')
                scanCredentialsId('jx-pipeline-git-github-github')
                repoOwner('nxmatic')
                repository('jxlabs-nos-app')
                buildOriginBranchWithPR(false)
                buildForkPRHead(false)
                buildForkPRMerge(false)
                buildOriginBranch(true)
                buildOriginPRHead(false)
                buildOriginPRMerge(true)
                includes('master test-*')
              }
            }
            orphanedItemStrategy {
              discardOldItems {
                daysToKeep(14)
                numToKeep(5)
              }
            }
          }
  03-kubernetes.yaml: |2
    jenkins:
      clouds:
      - kubernetes:
          containerCapStr: "0"
          maxRequestsPerHostStr: "32"
          name: "kubernetes"
          namespace: "{{.Release.Namespace}}"
          podLabels:
          - key: "jenkins"
            value: "slave"
          - key: "resource"
            value: "pod"
          - key: "usage"
            value: "build"
          serverUrl: "https://kubernetes.default"
  04-script-security.yaml: |2
    security:
      scriptApproval:
        approvedSignatures:
        - method hudson.plugins.git.GitSCM getBranches
        - method hudson.plugins.git.GitSCM getUserRemoteConfigs
        - staticMethod hudson.Functions printThrowable java.lang.Throwable
        - staticMethod groovy.util.Eval me java.lang.String
        - method java.util.Properties getProperty java.lang.String
  05-jira.yaml: |2
    unclassified:
      jiraGlobalConfiguration:
        sites:
          - appendChangeTimestamp: true
            credentialsId: "jenkins-master-jira"
            recordScmChanges: true
            supportsWikiStyleComment: true
            updateJiraIssueForAllStatus: true
            url: "https://jira.nuxeo.com/"
  06-timestamper.yaml: |2
    unclassified:
      timestamperConfig:
        allPipelines: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: {{ template "jenkins-servers.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: jenkins-master
rules:
  - apiGroups:
      - jenkins.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
      - services
      - namespaces
      - events
      - persistentvolumeclaims
      - pods/log
      - pods
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - pods
    verbs:
      - create
---
apiVersion: jenkins.io/v1alpha2
kind: Jenkins
metadata:
  name: master
  labels:
    app: {{ template "jenkins-servers.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  configurationAsCode:
    configurations: 
    - name: jenkins-operator-casc-master
    secret:
      name: jenkins-operator-secrets-master
  groovyScripts:
    configurations: null
    secret:
      name: ""
  jenkinsAPISettings:
    authorizationStrategy: createUser
  roles:
    - apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: jenkins-master
  service:
    labels:
      app: jenkins-operator
      chart: {{ template "jenkins-servers.chart" . }}
      component: "master"
      heritage: {{ .Release.Service }}
      release: {{ .Release.Name }}
      jenkins-cr: master
    type: ClusterIP
    port: 8080
    type: ClusterIP
  slaveService:
    port: 50000
    type: ClusterIP
  master:
    labels:
      jenkins-cr: master
    disableCSRFProtection: false
    plugins:
      - name: jira
        version: "3.0.15"
      - name: blueocean
        version: "1.23.2"
      - name: rebuild
        version: "1.31"
      - name: timestamper
        version: "1.11.3"
      - name: embeddable-build-status
        version: "2.0.3"
      - name: permissive-script-security
        version: "0.6"
      - name: disable-github-multibranch-status
        version: "1.2"
      - name: pipeline-github
        version: "2.5"
      - name: pipeline-gitstatuswrapper
        version: "1.2.0"
      - name: github-label-filter
        version: "1.0.0"
    basePlugins:
      - name: google-login
        version: "1.6"
      - name: kubernetes
        version: "1.25.7"
      - name: workflow-job
        version: "2.39"
      - name: workflow-aggregator
        version: "2.6"
      - name: git
        version: "4.2.2"
      - name: job-dsl
        version: "1.77"
      - name: configuration-as-code
        version: "1.40"
      - name: configuration-as-code-support
        version: "1.19"
      - name: kubernetes-credentials-provider
        version: "0.14"
      - name: github-branch-source
        version: "2.7.1"
      - name: command-launcher
        version: "1.4"
      - name: jx-resources
        version: "1.0.38"
      - name: support-core
        version: "2.68"
    volumes:
    - name: backup
      persistentVolumeClaim:
        claimName: jenkins-master-backup
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
    containers:
    - name: jenkins-master
      env:
        - name: JAVA_OPTS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
            -XX:MaxRAMFraction=1 -Djenkins.install.runSetupWizard=false -Djava.awt.headless=true
            -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true
            -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.FORCE_BINARY_WRAPPER=true
      image: jenkins/jenkins:lts
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 12
        httpGet:
          path: /login
          port: http
          scheme: HTTP
        initialDelaySeconds: 80
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /login
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 1500m
          memory: 3Gi
        requests:
          cpu: "1"
          memory: 500Mi
    - name: backup
      env:
      - name: BACKUP_DIR
        value: /backup
      - name: JENKINS_HOME
        value: /jenkins-home
      - name: BACKUP_COUNT
        value: "3"
      command:
      - bash
      - -c
      - tail -f /dev/null
      image: virtuslab/jenkins-operator-backup-pvc:v0.0.8
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 50Mi
      volumeMounts:
      - mountPath: /jenkins-home
        name: jenkins-home
      - mountPath: /backup
        name: backup
  backup:
    containerName: backup
    action:
      exec:
        command:
        - /home/user/bin/backup.sh 
    interval: 3600
    makeBackupBeforePodDeletion: true
  restore:
    containerName: backup
    action:
      exec:
        command:
        - /home/user/bin/restore.sh
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-operator-http-master
  labels:
    app: jenkins-operator
    jenkins-cr: master
  annotations:
    kubernetes.io/ingress.class: nginx
{{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: jenkins-operator-http-master
          servicePort: 8080
{{- if .Values.ingress.domain }}
    host: master{{ .Values.ingress.namespaceSubDomain }}{{ .Values.ingress.domain }}
{{- end }}
{{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - master{{ .Values.ingress.namespaceSubDomain }}{{ .Values.ingress.domain }}
{{- if .Values.ingress.tls.secretName }}
    secretName: "{{ .Values.ingress.tls.secretName }}"
{{- else if .Values.ingress.tls.production }}
    secretName: "tls-{{ .Values.ingress.domain | replace "." "-" }}-p"
{{- else }}
    secretName: "tls-{{ .Values.ingress.domain | replace "." "-" }}-s"
{{- end }}
{{- end }}
