apiVersion: jenkins.io/v1alpha2
kind: Jenkins
metadata:
  name: master
  labels:
    app: {{ template "jenkins-servers.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  configurationAsCode:
    configurations: null
    secret:
      name: ""
  groovyScripts:
    configurations: null
    secret:
      name: ""
  jenkinsAPISettings:
    authorizationStrategy: createUser
  service:
    labels:
      app: jenkins-operator
      chart: {{ template "jenkins-servers.chart" . }}
      component: "master"
      heritage: {{ .Release.Service }}
      release: {{ .Release.Name }}
      jenkins-cr: jenkins-operator-http-master
    type: ClusterIP
    port: 8080
    type: ClusterIP
  slaveService:
    port: 50000
    type: ClusterIP
  master:
    authorizationStrategy: createUser
    disableCSRFProtection: false
    basePlugins:
      - name: kubernetes
        version: 1.23.0
      - name: workflow-job
        version: "2.36"
      - name: workflow-aggregator
        version: "2.6"
      - name: git
        version: 4.0.0
      - name: job-dsl
        version: "1.76"
      - name: configuration-as-code
        version: "1.35"
      - name: configuration-as-code-support
        version: "1.19"
      - name: kubernetes-credentials-provider
        version: "0.13"
      - name: github-branch-source
        version: 2.6.0
      - name: jx-resources
        version: 1.0.38
    volumes:
    - name: backup
      persistentVolumeClaim:
        claimName: jenkins-master-backup
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
    containers:
    - name: jenkins-master
      image: jenkins/jenkins:lts
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 12
        httpGet:
          path: /login
          port: http
          scheme: HTTP
        initialDelaySeconds: 80
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /login
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 1500m
          memory: 3Gi
        requests:
          cpu: "1"
          memory: 500Mi
    - name: backup
      env:
      - name: BACKUP_DIR
        value: /backup
      - name: JENKINS_HOME
        value: /jenkins-home
      - name: BACKUP_COUNT
        value: "3"
      command:
      - bash
      - -c
      - tail -f /dev/null
      image: virtuslab/jenkins-operator-backup-pvc:v0.0.8
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 50Mi
      volumeMounts:
      - mountPath: /jenkins-home
        name: jenkins-home
      - mountPath: /backup
        name: backup
  backup:
    enabled: true
    containerName: backup
    interval: 3600
    makeBackupBeforePodDeletion: true
    pvc:
      className: standard
      size: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-master-backup
  labels:
    app: jenkins-operator
    jenkins-cr: {{ template "jenkins-servers.name" . }}
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-operator-http-master
  labels:
    app: jenkins-operator
    jenkins-cr: {{ template "jenkins-servers.name" . }}
  annotations:
    kubernetes.io/ingress.class: nginx
{{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: jenkins-operator-http-master
          servicePort: 80
{{- if .Values.ingress.domain }}
    host: master{{ .Values.ingress.namespaceSubDomain }}{{ .Values.ingress.domain }}
{{- end }}
{{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - master{{ .Values.ingress.namespaceSubDomain }}{{ .Values.ingress.domain }}
{{- if .Values.ingress.tls.secretName }}
    secretName: "{{ .Values.ingress.tls.secretName }}"
{{- else if .Values.ingress.tls.production }}
    secretName: "tls-{{ .Values.ingress.domain | replace "." "-" }}-p"
{{- else }}
    secretName: "tls-{{ .Values.ingress.domain | replace "." "-" }}-s"
{{- end }}
{{- end }}
